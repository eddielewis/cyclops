#!/home/pi/.virtualenvs/cv/bin/python
from camera import CameraServer
from gpio import GPIOHandler
from tcp_server import PiTCPServer, PiTCPHandler
import threading
import json
from types import SimpleNamespace
import socket


class App():

    def __init__(self):
        with open('config.json') as f:
            data = f.read().replace('\n', '')
            config = json.loads(
                data, object_hook=lambda d: SimpleNamespace(**d))
        config.netgear.ip = socket.gethostbyname(config.s_hostname)

        self.camera_server = CameraServer(
            config.camera, config.netgear)
        self.gpio = GPIOHandler(config.gpio, self.camera_server)

        PiTCPServer.allow_reuse_address = True
        self.tcp_server = PiTCPServer(
            self.camera_server, (config.tcp.host, config.tcp.port), PiTCPHandler)

    def run(self):
        while True:
            try:
                self.tcp_server.serve_forever()
            except KeyboardInterrupt:
                print("Exiting")
            finally:
                t = threading.Thread(target=self.tcp_server.shutdown())
                t.start()
                self.gpio.close()
                self.camera_server.close()
                t.join()


app = App()
app.run()
